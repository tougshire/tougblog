# Generated by Django 4.1.7 on 2023-04-09 22:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the thread', max_length=100, verbose_name='title')),
                ('starttime', models.TimeField(blank=True, help_text='The start time of the event', null=True, verbose_name='starting')),
                ('lenmin', models.IntegerField(blank=True, default=0, help_text='How long the event lasts (0 indicates indefinite or unkown)', verbose_name='length(minutes)')),
                ('content_format', models.CharField(choices=[('markdown', 'markdown'), ('html', 'html')], default='markdown', help_text='The format (or markup method) used for the content', max_length=20, verbose_name='content format')),
                ('content', models.TextField(blank=True, help_text='The content of the post', verbose_name='content')),
                ('summary_format', models.CharField(choices=[('same', 'same as content'), ('markdown', 'markdown'), ('html', 'html')], default='same', help_text='The format (or markup method) used for the summary', max_length=20, verbose_name='content format')),
                ('summary', models.TextField(blank=True, help_text='A shorter version of the content', verbose_name='summary')),
            ],
            options={
                'ordering': ['starttime', 'lenmin'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the thread', max_length=100, verbose_name='Title')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date/time this therad was created', verbose_name='created')),
                ('file', models.ImageField(upload_to='gallery/')),
                ('author', models.ForeignKey(help_text='The user who created ths thread', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='The title to be displayed for this placement', max_length=100, verbose_name='title')),
                ('list_order', models.CharField(blank=True, default='~', help_text='A character to determine the place on the list. Numbers are higher than capital letters, which are higher than small letters', max_length=1)),
                ('show_author', models.BooleanField(default=True, help_text='If the author should be shown in the list of posts. This is just a flag - the template has to be coded appropriately for this to work', verbose_name='show author')),
                ('show_created', models.BooleanField(default=True, help_text='If the creation date should be shown in the list of posts. This is just a flag - the template has to be coded appropriately for this to work', verbose_name='show created')),
            ],
            options={
                'ordering': ('list_order', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the thread', max_length=100, verbose_name='Title')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date/time this therad was created', verbose_name='created')),
                ('show_author', models.BooleanField(default=True, help_text='If the author should be shown in the detail view. This is just a flag - the template has to be coded appropriately for this to work', verbose_name='show author')),
                ('show_created', models.BooleanField(default=True, help_text='If the creation date should be shown in the detail view. This is just a flag - the template has to be coded appropriately for this to work', verbose_name='show created')),
                ('content_format', models.CharField(choices=[('markdown', 'markdown'), ('html', 'html')], default='markdown', help_text='The format (or markup method) used for the content', max_length=20, verbose_name='content format')),
                ('content', models.TextField(blank=True, help_text='The content of the post', verbose_name='content')),
                ('summary_format', models.CharField(choices=[('same', 'same as content'), ('markdown', 'markdown'), ('html', 'html')], default='same', help_text='The format (or markup method) used for the summary', max_length=20, verbose_name='summary format')),
                ('summary', models.TextField(blank=True, help_text='A shorter version of the content', verbose_name='summary')),
                ('list_order', models.CharField(blank=True, default='~', help_text='A character to determine the place on the list. Numbers are higher than capital letters, which are higher than small letters', max_length=1)),
                ('author', models.ForeignKey(blank=True, help_text='The user who created ths thread', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('placement', models.ForeignKey(blank=True, help_text='The place on the home page', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tougblog.placement')),
                ('title_image', models.ForeignKey(blank=True, help_text='The image to display above the title, and to use for social media graphs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tougblog.image')),
            ],
            options={
                'ordering': ('list_order', '-created'),
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title of the thread', max_length=100, verbose_name='Title')),
                ('slug', models.SlugField(help_text='The code that provides a character based ID for this page', unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date/time this therad was created', verbose_name='created')),
                ('content_format', models.CharField(choices=[('markdown', 'markdown'), ('html', 'html')], default='markdown', help_text='The format (or markup method) used for the content', max_length=20, verbose_name='content format')),
                ('content', models.TextField(blank=True, help_text='The content of the post', verbose_name='content')),
                ('list_order', models.CharField(blank=True, default='~', help_text='A character to determine the place on the list. Numbers are higher than capital letters, which are higher than small letters', max_length=1)),
                ('author', models.ForeignKey(blank=True, help_text='The user who created ths thread', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('title_image', models.ForeignKey(blank=True, help_text='The image to display above the title, and to use for social media graphs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tougblog.image')),
            ],
            options={
                'ordering': ('list_order', '-created'),
            },
        ),
        migrations.CreateModel(
            name='EventDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whenday', models.DateField(help_text='The date of the event', verbose_name='date')),
                ('event', models.ForeignKey(help_text='The event to which this date belongs', on_delete=django.db.models.deletion.CASCADE, to='tougblog.event')),
            ],
            options={
                'ordering': ('whenday', 'event'),
            },
        ),
        migrations.AddField(
            model_name='event',
            name='post',
            field=models.ForeignKey(blank=True, help_text="The post to use as the content and summary.  If selected, the post content and summary will be used instead of the event's content and summary", null=True, on_delete=django.db.models.deletion.SET_NULL, to='tougblog.post'),
        ),
        migrations.AddField(
            model_name='event',
            name='title_image',
            field=models.ForeignKey(blank=True, help_text='The image to display above the title, and to use for social media graphs', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tougblog.image'),
        ),
    ]
